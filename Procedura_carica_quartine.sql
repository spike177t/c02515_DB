USE `gualini`;
DROP procedure IF EXISTS `carica_quartine`;

DELIMITER $$
USE `gualini`$$
CREATE PROCEDURE `carica_quartine` (
pMAGAZZINO INT
, pPREFISSO_QRT varchar(10)
, pNUM INT
)
BEGIN

	DECLARE ppID_QUARTINA  varchar(45) DEFAULT  "Q_xxx";
	DECLARE ppTOTALE_PEZZI_QUARTINA INT DEFAULT  4;
	DECLARE ppNOME_COMMESSA  varchar(45)  DEFAULT  "c_QRT";
	DECLARE ppNUM_SQUADRETTE1 INT  DEFAULT  4;
	DECLARE ppCOD_SQUADRETTA1 varchar(45)   DEFAULT  "banco1";
	DECLARE ppNUM_SQADRETTE2 INT DEFAULT  0;
	DECLARE ppCOD_SQUADRETTA2 varchar(45)   DEFAULT  "";
	DECLARE ppcasDECLAREto INT DEFAULT  0;
	DECLARE ppmagazzino INT DEFAULT  0;

	DECLARE ppPOSIZIONE INT DEFAULT  1; 
	DECLARE ppID_PEZZO  varchar(45)  DEFAULT "ppID_PEZZO"; 
	DECLARE ppNOME_PEZZO_ESTERNO varchar(45)  DEFAULT  "EST"; 
	DECLARE ppCODICE_PROFILO varchar(45)   DEFAULT  "CODPROF"; 
	DECLARE ppSERIE_PROFILO varchar(45)  DEFAULT  "SERIEPROF"; 
	DECLARE ppMAX_LUNGHEZZA INT DEFAULT  20000; 
	DECLARE ppALTEZZA_PROFILO INT DEFAULT 1000; 
	DECLARE ppLARGHEZZA_PROFILO INT DEFAULT 500; 
	DECLARE ppMISURA_CAMERA_ESTERNA INT DEFAULT 0; 
	DECLARE ppAPPOGGIO_PEZZO INT DEFAULT  NULL; 
	DECLARE ppPOSIZIONE_PEZZO_ESTERN INT DEFAULT NULL; 
	DECLARE ppID_PEZZO_ESTERNO  varchar(45)  DEFAULT  NULL; 
	DECLARE ppLUNGHEZZA_PEZZO_ESTERNO INT DEFAULT  NULL; 
	DECLARE ppFILE_XML  varchar(45)  DEFAULT  NULL; 
	DECLARE ppDDATA  varchar(45)  DEFAULT  NULL; 
	DECLARE ppORA  varchar(45)  DEFAULT  NULL;

	DECLARE c_QRT INT DEFAULT 1;
    DECLARE c_PEZZI INT DEFAULT 1;

	SET ppmagazzino = pMAGAZZINO;

	add_qrt: REPEAT

		SET ppID_QUARTINA = CONCAT(TO_DAYS(NOW()), pPREFISSO_QRT , "__" , c_QRT);
		-- CALL `gualini`.`CasDECLAREtoPiuVicinoAndInsert`(<{TipoCarico INT}>, <{LeggiDaQuadra INT}>, <{OP VARCHAR(10)}>, <{/* ""  DEFAULT  solo ricerca del casDECLAREto piÃ¹ vicino}>, <{"INS"  DEFAULT  inserisce anche nuova quartina}>, <{"UPD" aggiorna i dati indentificativi della quartina */
		-- 		pID_QUARTINA VARCHAR(45)}>, <{pTOTALE_PEZZI_QUARTINA TINYINT(4)}>, <{pNOME_COMMESSA VARCHAR(45)}>, <{pNUM_SQUADRETTE1 TINYINT(4)}>, <{pCOD_SQUADRETTA1  VARCHAR(45)}>, <{pNUM_SQADRETTE2 TINYINT(4)}>, <{pCOD_SQUADRETTA2  VARCHAR(45)}>);

		CALL `gualini`.`CassettoPiuVicinoAndInsert`(0, pMAGAZZINO, "INS", ppID_QUARTINA, ppTOTALE_PEZZI_QUARTINA, ppNOME_COMMESSA,ppNUM_SQUADRETTE1, ppCOD_SQUADRETTA1,ppNUM_SQADRETTE2, ppCOD_SQUADRETTA2);
        
        SET c_PEZZI = 1;
		add_pezzi: REPEAT
			SET ppPOSIZIONE = c_PEZZI;
			SET ppID_PEZZO =  CONCAT(ppID_QUARTINA , "___" , ppPOSIZIONE);
			CALL `gualini`.`inserisci_pezzo`(ppID_QUARTINA,
			  ppPOSIZIONE,ppID_PEZZO, ppNOME_PEZZO_ESTERNO, ppCODICE_PROFILO, ppSERIE_PROFILO, ppMAX_LUNGHEZZA, ppALTEZZA_PROFILO, ppLARGHEZZA_PROFILO, ppMISURA_CAMERA_ESTERNA, ppAPPOGGIO_PEZZO, ppPOSIZIONE_PEZZO_ESTERN, ppID_PEZZO_ESTERNO, ppLUNGHEZZA_PEZZO_ESTERNO, ppFILE_XML, ppDDATA, ppORA);
			
            SET c_PEZZI = c_PEZZI + 1;
            UNTIL c_PEZZI > 4
		END REPEAT add_pezzi;	
    
		SET c_QRT = c_QRT + 1 ;
	UNTIL c_QRT > pNUM
	END REPEAT add_qrt;	
END$$

DELIMITER ;

